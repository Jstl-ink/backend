openapi: 3.0.3
info:
  description: "Jstl.ink gives users the ability to easily create simple pages containing\
    \ for \nthem relevant links and their social media profiles"
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Jstl.ink API
  version: 0.1.0
servers:
- url: localhost:8080
- url: https://api.jstl.ink.paulus.rocks
tags:
- description: Everything about jstlink pages
  name: page
- description: Everything about the creator page to create & edit pages
  name: creator
paths:
  /{pageId}:
    get:
      description: Returns a single page
      operationId: getPageById
      parameters:
      - description: ID of order that needs to be fetched
        explode: false
        in: path
        name: pageId
        required: true
        schema:
          $ref: '#/components/schemas/Id'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
          description: successful operation
        "404":
          description: Page not found
      summary: Get page by pageId
      tags:
      - page
      x-eov-operation-handler: controllers/PageController
  /creator:
    post:
      operationId: createPage
      requestBody:
        $ref: '#/components/requestBodies/PageId'
      responses:
        "401":
          description: Access token is missing or invalid
        "409":
          description: PageId already exists
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
          description: successful operation
      security:
      - bearerAuth: []
      summary: Create new user page
      tags:
      - creator
      x-codegen-request-body-name: body
      x-eov-operation-handler: controllers/CreatorController
  /creator/{pageId}:
    delete:
      operationId: deletePageByPageId
      parameters:
      - description: ID of order that needs to be fetched
        explode: false
        in: path
        name: pageId
        required: true
        schema:
          $ref: '#/components/schemas/Id'
        style: simple
      responses:
        "401":
          description: Access token is missing or invalid
        "200":
          description: successful operation
      security:
      - bearerAuth: []
      summary: Delete a user page
      tags:
      - creator
      x-eov-operation-handler: controllers/CreatorController
    get:
      operationId: getCreatorPageById
      parameters:
      - description: ID of order that needs to be fetched
        explode: false
        in: path
        name: pageId
        required: true
        schema:
          $ref: '#/components/schemas/Id'
        style: simple
      responses:
        "401":
          description: Access token is missing or invalid
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
          description: successful operation
      security:
      - bearerAuth: []
      summary: Get the creator page
      tags:
      - creator
      x-eov-operation-handler: controllers/CreatorController
    patch:
      operationId: updatePageDetailsByPageId
      parameters:
      - description: ID of order that needs to be fetched
        explode: false
        in: path
        name: pageId
        required: true
        schema:
          $ref: '#/components/schemas/Id'
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Page'
      responses:
        "401":
          description: Access token is missing or invalid
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
          description: successful operation
      security:
      - bearerAuth: []
      summary: Update details of user page
      tags:
      - creator
      x-codegen-request-body-name: body
      x-eov-operation-handler: controllers/CreatorController
    put:
      description: Used to initialize user page with details - USE PATCH to actually
        update the details of user page
      operationId: createPageDetailsByPageId
      parameters:
      - description: ID of order that needs to be fetched
        explode: false
        in: path
        name: pageId
        required: true
        schema:
          $ref: '#/components/schemas/Id'
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Page'
      responses:
        "401":
          description: Access token is missing or invalid
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
          description: successful operation
      security:
      - bearerAuth: []
      summary: Create user page details
      tags:
      - creator
      x-codegen-request-body-name: body
      x-eov-operation-handler: controllers/CreatorController
components:
  parameters:
    PageId:
      description: ID of order that needs to be fetched
      explode: false
      in: path
      name: pageId
      required: true
      schema:
        $ref: '#/components/schemas/Id'
      style: simple
  requestBodies:
    Page:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ImmutablePage'
      required: true
    PageId:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PageIdRequestBody'
      required: true
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
    SuccessfulResponse:
      description: successful operation
    Link:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Link'
      description: successful operation
    Page:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Page'
      description: successful operation
  schemas:
    Id:
      description: ID of page
      type: string
    Page:
      allOf:
      - $ref: '#/components/schemas/ImmutablePage'
      - properties:
          id:
            $ref: '#/components/schemas/Id'
        required:
        - id
        type: object
      example:
        img: img
        socialLinks:
        - null
        - null
        name: name
        bio: bio
        links:
        - name: name
          link: link
        - name: name
          link: link
        id: null
      type: object
    Link:
      example:
        name: name
        link: link
      properties:
        name:
          description: alias for link
          type: string
        link:
          description: url of a link
          type: string
      required:
      - link
      - name
      type: object
    SocialLink:
      $ref: '#/components/schemas/Link'
    ImmutablePage:
      example:
        img: img
        socialLinks:
        - null
        - null
        name: name
        bio: bio
        links:
        - name: name
          link: link
        - name: name
          link: link
      properties:
        name:
          description: username user page
          type: string
        bio:
          description: biography for user page
          type: string
        img:
          description: url for image
          type: string
        socialLinks:
          description: links for social media profiles
          items:
            $ref: '#/components/schemas/SocialLink'
          type: array
        links:
          description: custom definable links
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    PageIdRequestBody:
      example:
        id: id
      properties:
        id:
          description: ID of page
          type: string
      required:
      - id
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
