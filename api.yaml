openapi: 3.0.3
info:
  title: Jstl.ink API
  description: |-
    Jstl.ink gives users the ability to easily create simple pages containing for 
    them relevant links and their social media profiles
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0

servers:
  - url: localhost:8080
  - url: https://api.jstl.ink.paulus.rocks

tags:
  - name: page
    description: Everything about jstlink pages
  - name: creator
    description: Everything about the creator page to create & edit pages

paths:
  /{handle}:
    get:
      tags:
        - page
      summary: Get page by handle
      description: Returns a single page
      operationId: getPageByHandle
      parameters:
        - $ref: '#/components/parameters/Handle'
      responses:
        '200':
          $ref: '#/components/responses/Page'
        '404':
          description: Page not found

  /creator:
    post:
      tags:
        - creator
      summary: Create new user page
      operationId: createPage
      x-codegen-request-body-name: body
      requestBody:
        $ref: '#/components/requestBodies/SignUp'
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '409':
          description: PageId already exists
        '200':
          $ref: '#/components/responses/Page'
      security:
        - bearerAuth: [ ]

  /creator/{pageId}:
    get:
      tags:
        - creator
      summary: Get a user page
      operationId: getCreatorPageById
      parameters:
        - $ref: '#/components/parameters/PageId'
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '200':
          $ref: '#/components/responses/Page'
        '404':
          description: Page not found
      security:
        - bearerAuth: [ ]
    delete:
      tags:
        - creator
      summary: Delete a user page
      operationId: deletePageByPageId
      parameters:
        - $ref: '#/components/parameters/PageId'
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '200':
          $ref: '#/components/responses/SuccessfulResponse'
      security:
        - bearerAuth: [ ]
    put:
      tags:
        - creator
      summary: Create user page details
      description: Used to initialize user page with details - USE PATCH to actually update the details of user page
      operationId: createPageDetailsByPageId
      parameters:
        - $ref: '#/components/parameters/PageId'
      x-codegen-request-body-name: body
      requestBody:
        $ref: '#/components/requestBodies/Page'
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '200':
          $ref: '#/components/responses/Page'
      security:
        - bearerAuth: [ ]
    patch:
      tags:
        - creator
      summary: Update details of user page
      operationId: updatePageDetailsByPageId
      parameters:
        - $ref: '#/components/parameters/PageId'
      x-codegen-request-body-name: body
      requestBody:
        $ref: '#/components/requestBodies/Page'
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '200':
          $ref: '#/components/responses/Link'
      security:
        - bearerAuth: [ ]

components:
  schemas:
    Id:
      description: ID of page
      type: string

    Handle:
      description: used as pathname in the url
      type: string

    Page:
      type: object
      allOf:
        - $ref: '#/components/schemas/MutablePage'
        - type: object
          required:
            - id
            - handle
          properties:
            id:
              $ref: '#/components/schemas/Id'
            handle:
              $ref: '#/components/schemas/Handle'

    Link:
      type: object
      required:
        - name
        - link
      properties:
        name:
          description: alias for link
          type: string
        link:
          description: url of a link
          type: string

    SocialLink:
      $ref: '#/components/schemas/Link'

    MutablePage:
      type: object
      properties:
        name:
          description: username user page
          type: string
        bio:
          description: biography for user page
          type: string
        img:
          type: string
          description: url for image
        socialLinks:
          type: array
          description: links for social media profiles
          items:
            $ref: '#/components/schemas/SocialLink'
        links:
          type: array
          description: custom definable links
          items:
            $ref: '#/components/schemas/Link'

    SignUp:
      type: object
      required:
        - id
        - handle
      properties:
        id:
          $ref: '#/components/schemas/Id'
        handle:
          $ref: '#/components/schemas/Handle'

  #################

  parameters:
    Handle:
      name: handle
      in: path
      description: handle to get a page
      required: true
      schema:
        $ref: '#/components/schemas/Handle'

    PageId:
      name: pageId
      in: path
      description: pageId to get a page
      required: true
      schema:
        $ref: '#/components/schemas/Id'

  #################

  requestBodies:
    Page:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/MutablePage'

    SignUp:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SignUp'

  #################

  responses:
    UnauthorizedError:
      description: Access token is missing or invalid

    SuccessfulResponse:
      description: successful operation

    Link:
      description: successful operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Link'

    Page:
      description: successful operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Page'

  #################

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT